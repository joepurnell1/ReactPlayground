{"ast":null,"code":"import _regeneratorRuntime from \"/Users/josephpurnell/Development/ReactPlayground/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/josephpurnell/Development/ReactPlayground/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// See readme for bearer token\nvar bearerToken = \"BQDNVqbkL0rvbkHQEpSLzv4FaVMiraPnu41Cj191r3HnBA-3dSqXFRQKy6cH0cdIMrkfRu1MSoE0TrsoIAtMov2ccnLogPgQ2lTfl-KVPhqW2gvve6qkaSwCkxD2HCLvoLMlfV_llpFo-eQaFwgfZDge\";\n\nfunction getUrl(artist) {\n  var formattedArtist = artist.toLowerCase().replace(/ /g, \"%20\");\n  return \"https://api.spotify.com/v1/search?q=\".concat(formattedArtist, \"&type=artist\");\n}\n\nfunction searchArtist(_x) {\n  return _searchArtist.apply(this, arguments);\n}\n\nfunction _searchArtist() {\n  _searchArtist = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(artist) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (artist) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", []);\n\n          case 2:\n            return _context.abrupt(\"return\", fetch(getUrl(artist), {\n              method: \"GET\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(bearerToken)\n              }\n            }).then(function (response) {\n              if (response.status !== 200) {\n                throw response();\n              }\n\n              return response.json();\n            }).then(function (data) {\n              return data.artists.items;\n            }).catch(function (errorMessage) {\n              return [\"Error getting artists message is '\".concat(errorMessage, \"'\")];\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _searchArtist.apply(this, arguments);\n}\n\nfunction getRandomAlbum() {\n  return _getRandomAlbum.apply(this, arguments);\n}\n\nfunction _getRandomAlbum() {\n  _getRandomAlbum = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetch(\"https://api.spotify.com/v1/me/albums\", {\n              method: \"GET\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(bearerToken)\n              }\n            }).then(function (response) {\n              if (response.status !== 200) {\n                throw response.statusText;\n              }\n\n              return response.json();\n            }).then(function (data) {\n              console.log(data.items[Math.floor(Math.random() * data.total)]);\n              return data.items[Math.floor(Math.random() * data.total)].album.images[1].url;\n            }).catch(function (errorMessage) {\n              return [\"Error getting artists message is '\".concat(errorMessage, \"'\")];\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getRandomAlbum.apply(this, arguments);\n}\n\nexport { searchArtist, getRandomAlbum };","map":{"version":3,"sources":["/Users/josephpurnell/Development/ReactPlayground/src/spotifyService.js"],"names":["bearerToken","getUrl","artist","formattedArtist","toLowerCase","replace","searchArtist","fetch","method","headers","Accept","Authorization","then","response","status","json","data","artists","items","catch","errorMessage","getRandomAlbum","statusText","console","log","Math","floor","random","total","album","images","url"],"mappings":";;AAAA;AACA,IAAMA,WAAW,GAAG,0JAApB;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIC,eAAe,GAAGD,MAAM,CAACE,WAAP,GAAqBC,OAArB,CAA6B,IAA7B,EAAmC,KAAnC,CAAtB;AACA,uDAA8CF,eAA9C;AACD;;SAEcG,Y;;;;;;;2BAAf,iBAA4BJ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBACOA,MADP;AAAA;AAAA;AAAA;;AAAA,6CAEW,EAFX;;AAAA;AAAA,6CAKSK,KAAK,CAACN,MAAM,CAACC,MAAD,CAAP,EAAiB;AAC3BM,cAAAA,MAAM,EAAE,KADmB;AAE3BC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB,kBAFT;AAGPC,gBAAAA,aAAa,mBAAYX,WAAZ;AAHN;AAFkB,aAAjB,CAAL,CAQJY,IARI,CAQC,UAAAC,QAAQ,EAAI;AAChB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAMD,QAAQ,EAAd;AACD;;AACD,qBAAOA,QAAQ,CAACE,IAAT,EAAP;AACD,aAbI,EAcJH,IAdI,CAcC,UAAAI,IAAI;AAAA,qBAAIA,IAAI,CAACC,OAAL,CAAaC,KAAjB;AAAA,aAdL,EAeJC,KAfI,CAeE,UAAAC,YAAY,EAAI;AACrB,qBAAO,6CAAsCA,YAAtC,OAAP;AACD,aAjBI,CALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyBeC,c;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8CACSd,KAAK,yCAEZ;AACEC,cAAAA,MAAM,EAAE,KADV;AAEEC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB,kBAFT;AAGPC,gBAAAA,aAAa,mBAAYX,WAAZ;AAHN;AAFX,aAFY,CAAL,CAUJY,IAVI,CAUC,UAAAC,QAAQ,EAAI;AAChB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAMD,QAAQ,CAACS,UAAf;AACD;;AACD,qBAAOT,QAAQ,CAACE,IAAT,EAAP;AACD,aAfI,EAgBJH,IAhBI,CAgBC,UAAAI,IAAI,EAAI;AACZO,cAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACE,KAAL,CAAWO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,IAAI,CAACY,KAAhC,CAAX,CAAZ;AAIA,qBAAOZ,IAAI,CAACE,KAAL,CAAWO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,IAAI,CAACY,KAAhC,CAAX,EAAmDC,KAAnD,CAAyDC,MAAzD,CAAgE,CAAhE,EAAmEC,GAA1E;AACD,aAtBI,EAuBJZ,KAvBI,CAuBE,UAAAC,YAAY,EAAI;AACrB,qBAAO,6CAAsCA,YAAtC,OAAP;AACD,aAzBI,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6BA,SAAQd,YAAR,EAAsBe,cAAtB","sourcesContent":["// See readme for bearer token\nconst bearerToken = \"BQDNVqbkL0rvbkHQEpSLzv4FaVMiraPnu41Cj191r3HnBA-3dSqXFRQKy6cH0cdIMrkfRu1MSoE0TrsoIAtMov2ccnLogPgQ2lTfl-KVPhqW2gvve6qkaSwCkxD2HCLvoLMlfV_llpFo-eQaFwgfZDge\";\n\nfunction getUrl(artist) {\n  let formattedArtist = artist.toLowerCase().replace(/ /g, \"%20\");\n  return `https://api.spotify.com/v1/search?q=${formattedArtist}&type=artist`;\n}\n\nasync function searchArtist(artist) {\n  if (!artist) {\n    return [];\n  }\n\n  return fetch(getUrl(artist), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${bearerToken}`\n    }\n  })\n    .then(response => {\n      if (response.status !== 200) {\n        throw response();\n      }\n      return response.json();\n    })\n    .then(data => data.artists.items)\n    .catch(errorMessage => {\n      return [`Error getting artists message is '${errorMessage}'`];\n    });\n}\n\nasync function getRandomAlbum() {\n  return fetch(\n    `https://api.spotify.com/v1/me/albums`,\n  {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${bearerToken}`\n    }\n  })\n    .then(response => {\n      if (response.status !== 200) {\n        throw response.statusText;\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log(data.items[Math.floor(Math.random() * data.total)]);\n\n\n\n      return data.items[Math.floor(Math.random() * data.total)].album.images[1].url;\n    })\n    .catch(errorMessage => {\n      return [`Error getting artists message is '${errorMessage}'`];\n    });\n}\n\nexport {searchArtist, getRandomAlbum};\n"]},"metadata":{},"sourceType":"module"}